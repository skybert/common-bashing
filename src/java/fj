#! /usr/bin/env bash

## fj - find jar, trying to be smart
##
## by torstein at skybert dot net

_verbose=0
_query=

_show_help_and_exit() {
  cat <<EOF
Usage: ${BASH_SOURCE[0]} [OPTIONS] <QUERY>

QUERY
  Full class JAR reference
  com/google/common/collect/UnmodifiableIterator or just the class
  name UnmodifiableIterator

OPTIONS
  -d, --dir <dir>   Directory to search for JARs
  -v, --verbose     I want it all and I want it now.
  -h, --help        Don't panic.
EOF

  exit 0
}

_read_user_input() {
  local OPTS=
  OPTS=$(getopt \
           -o hvd: \
           --long help \
           --long verbose \
           --long dir \
           -n 'parse-options' \
           -- "$@")
  if [ $? != 0 ] ; then
    echo "Failed parsing options." >&2
    exit 1
  fi
  eval set -- "$OPTS"

  while true; do
    case "$1" in
      -h | --help )
        _show_help_and_exit;
        break;;
      -v | --verbose )
        _verbose=1
        shift;;
      -d | --dir )
        _mvn_repo_dir=$2
        shift 2;;
      -- )
        shift;
        break ;;
      * )
        break ;;
    esac
  done

  _rest_of_args=$*
}

# $1 :: dir
_find_jars_in_dir() {
  local dir=$1

  if [ ${_fast-0} -eq 1 ]; then
    local domain=${_query%%/*}
    if [ -d "${dir}/${domain}" ]; then
      local company=${_query#${domain}/}
      company=${company%%/*}

      if [ -d "${dir}/${domain}/${company}" ]; then
        dir=${dir}/${domain}/${company}
      else
        dir=${dir}/${domain}
      fi
    fi
  fi

  if [ "${_verbose-0}" -eq 1 ]; then
    printf "Searching for JARs in %s\n" "${dir}"
  fi

  if [ -d "${dir}" ]; then
    local result=
    result=$(
      grep --files-with-matches \
           --ignore-case \
           --recursive \
           --include "*.jar" \
           --fixed-strings \
           "${_query}" \
           "${dir}" |
        egrep -v '(sources|javadoc).jar')

    if [[ -n "${result}" && "${_verbose-0}" -eq 1 ]]; then
      printf "%s\n" "${result}" |
        while read -r f; do
          printf "%s \n" "${f}"
          unzip -v "${f}" |
            grep --fixed-strings --ignore-case "${_query}" |
            awk '{print "   â†’ " $8;}' |
            grep --fixed-strings --ignore-case --color "${_query}"
        done
    else
      printf "%s\n" "${result}"
    fi
  fi
}


_find_jars_in_maven_repo() {
  local dir=${_mvn_repo_dir-"${HOME}/.m2/repository"}
  _find_jars_in_dir "${dir}"
}

_find_jars_in_tomcat() {
  _find_jars_in_dir /opt/tomcat-engine1
}

_find_jars_in_cwd() {
  :
}

_ensure_sanity() {
  :
}

_make_sense_of_query() {
  :
}

main() {
  _read_user_input "$@"
  _query=${_rest_of_args}
  _ensure_sanity
  _make_sense_of_query
  _find_jars_in_maven_repo
  printf "\n"
  _find_jars_in_tomcat
  printf "\n"
  _find_jars_in_cwd
}

main "$@"
